Import: import
String Constant: "funcs.lg"
Semi Colon: ;
func: func
Data Type: int
Identifier: main
Parenthesis: (
Parenthesis: )
Curly: {
Data Type: rational
Relational Op: <
Data Type: int
Comma: ,
Data Type: int
Relational Op: >
Identifier: c
Arithmetic Bin Op: =
Curly: {
Number Constant: 1
Comma: ,
Number Constant: 2
Curly: }
Semi Colon: ;
Curve: curve
Identifier: y
Parenthesis: (
Identifier: x
Comma: ,
Identifier: a
Comma: ,
Identifier: b
Parenthesis: )
Arithmetic Bin Op: =
Identifier: a
Arithmetic Bin Op: *
Identifier: sin
Parenthesis: (
Dollar: $x
Parenthesis: )
Arithmetic Bin Op: +
Identifier: b
Arithmetic Bin Op: *
Identifier: cos
Parenthesis: (
Dollar: $x
Parenthesis: )
Arithmetic Bin Op: ^
Number Constant: 2
Arithmetic Bin Op: +
Identifier: a
Arithmetic Bin Op: *
Identifier: b
Semi Colon: ;
Curve: curve
Identifier: w
Parenthesis: (
Identifier: x
Parenthesis: )
Arithmetic Bin Op: =
Dollar: $x
Arithmetic Bin Op: ^
Number Constant: 4
Arithmetic Bin Op: +
Number Constant: 3
Arithmetic Bin Op: *
Dollar: $x
Arithmetic Bin Op: ^
Number Constant: 2
Arithmetic Bin Op: -
Number Constant: 2
Arithmetic Bin Op: *
Dollar: $x
Semi Colon: ;
Curve: curve
Identifier: z
Parenthesis: (
Identifier: y
Parenthesis: )
Arithmetic Bin Op: =
Identifier: input_poly
Parenthesis: (
Number Constant: 5
Parenthesis: )
Arithmetic Bin Op: /
Identifier: w
Parenthesis: (
Dollar: $y
Parenthesis: )
Semi Colon: ;
Curve: curve
Identifier: z2
Parenthesis: (
Identifier: y
Parenthesis: )
Arithmetic Bin Op: =
Identifier: z
Arithmetic Bin Op: *
Dollar: $y
Semi Colon: ;
Curve: curve
Identifier: y1
Arithmetic Bin Op: =
diff: D
Square Bracket: [
Identifier: y
Comma: ,
Identifier: x
Square Bracket: ]
Semi Colon: ;
Identifier: z2
Arithmetic Bin Op: =
diff: D
Square Bracket: [
Identifier: z2
Comma: ,
Identifier: x
Square Bracket: ]
Semi Colon: ;
Curve: curve
Identifier: z3
Arithmetic Bin Op: =
diff: D
Square Bracket: [
Identifier: y
Arithmetic Bin Op: *
Identifier: z2
Comma: ,
Identifier: x
Square Bracket: ]
Semi Colon: ;
Identifier: print_curve
Parenthesis: (
Identifier: z3
Parenthesis: )
Semi Colon: ;
Return: return
Number Constant: 0
Semi Colon: ;
Curly: }
